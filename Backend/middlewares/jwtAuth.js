const jwt = require('jsonwebtoken');
const jwtAuth = (role = null) => {
    return async (req, res, next) => {
        console.log(`üîç jwtAuth appel√© avec r√¥le : ${role} pour la route ${req.originalUrl}`);

        const authHeader = req.headers.authorization;
        if (!authHeader || !authHeader.startsWith("Bearer ")) {
            return res.status(401).json({ message: "Acc√®s refus√© ! Aucun token fourni" });
        }

        const token = authHeader.split(" ")[1];

        try {
            const decoded = jwt.verify(token, process.env.JWT_KEY);
            req.user = decoded; 
            
            console.log("üîç Utilisateur authentifi√© :", req.user);

            if (role && req.user.role !== role) {
                return res.status(403).json({ message: `Acc√®s interdit. Permission refus√©e. R√¥le attendu: ${role} | R√¥le re√ßu: ${req.user.role}` });
            }

            next();
        } catch (error) {
            return res.status(403).json({ message: "Token expir√© ou invalide" });
        }
    };
};


module.exports = jwtAuth;
